from django.contrib import admin
from .models import Order, OrderItem
from store.models import Product, StockMovement

class OrderItemInline(admin.TabularInline):
    model = OrderItem
    extra = 0
    readonly_fields = ['product', 'quantity']

class OrderAdmin(admin.ModelAdmin):
    list_display = ['id', 'user', 'status', 'total_price', 'created_at']
    list_filter = ['status', 'created_at']
    search_fields = ['user__username', 'id']
    inlines = [OrderItemInline]
    actions = ['cancel_orders', 'reactivate_orders']

    def save_model(self, request, obj, form, change):
        """
        –£–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–∞–Ω–∏–µ–º –∏ –≤–æ–∑–≤—Ä–∞—Ç–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞.
        """
        if change:  # ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–∫–∞–∑ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–Ω–µ –Ω–æ–≤—ã–π)
            old_order = Order.objects.get(pk=obj.pk)  # üî• –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å

            # üî• –ï—Å–ª–∏ –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—è–ª–∏, –∞ —Ç–µ–ø–µ—Ä—å –∞–∫—Ç–∏–≤–∏—Ä—É—é—Ç ‚Üí –Ω—É–∂–Ω–æ —Å–ø–∏—Å–∞—Ç—å —Ç–æ–≤–∞—Ä—ã
            if old_order.status == "cancelado" and obj.status != "cancelado":
                self.deduct_stock(obj)

            # üî• –ï—Å–ª–∏ –∑–∞–∫–∞–∑ –∞–∫—Ç–∏–≤–Ω—ã–π, –∞ —Ç–µ–ø–µ—Ä—å –æ—Ç–º–µ–Ω—è—é—Ç ‚Üí –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å —Ç–æ–≤–∞—Ä—ã
            elif old_order.status != "cancelado" and obj.status == "cancelado":
                self.restore_stock(obj)

        super().save_model(request, obj, form, change)

    def deduct_stock(self, order):
        """
        –°–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–∞.
        """
        stock_movements = []
        updated_products = []

        for item in order.items.all():
            if item.product.stock < item.quantity:
                raise ValueError(f"Stock insuficiente para {item.product.name}.")

            item.product.stock -= item.quantity
            updated_products.append(item.product)

            stock_movements.append(StockMovement(
                product=item.product,
                change=-item.quantity,
                reason=f"Reactivaci√≥n de pedido {order.id} (Admin)"
            ))

        if updated_products:
            Product.objects.bulk_update(updated_products, ['stock'])
            StockMovement.objects.bulk_create(stock_movements)

    def restore_stock(self, order):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–∫–∞–∑–∞.
        """
        stock_movements = []
        updated_products = []

        for item in order.items.all():
            item.product.stock += item.quantity
            updated_products.append(item.product)

            stock_movements.append(StockMovement(
                product=item.product,
                change=item.quantity,
                reason=f"Cancelaci√≥n de pedido {order.id} (Admin)"
            ))

        if updated_products:
            Product.objects.bulk_update(updated_products, ['stock'])
            StockMovement.objects.bulk_create(stock_movements)

    @admin.action(description="Cancelar pedidos seleccionados y devolver stock")
    def cancel_orders(self, request, queryset):
        """
        –ú–∞—Å—Å–æ–≤–∞—è –æ—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–æ–≤.
        """
        for order in queryset:
            if order.status != "enviado":
                order.status = "cancelado"
                self.restore_stock(order)
                order.save()
        self.message_user(request, "Pedidos cancelados y stock devuelto con √©xito.")

    @admin.action(description="Reactivar pedidos seleccionados y descontar stock")
    def reactivate_orders(self, request, queryset):
        """
        –ú–∞—Å—Å–æ–≤–∞—è —Ä–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤ –∏ —Å–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤.
        """
        for order in queryset:
            if order.status == "cancelado":
                order.status = "pendiente"
                self.deduct_stock(order)
                order.save()
        self.message_user(request, "Pedidos reactivados y stock descontado con √©xito.")

admin.site.register(Order, OrderAdmin)
