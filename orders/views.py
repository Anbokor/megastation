from rest_framework import generics, permissions
from rest_framework import status
from rest_framework.response import Response
from rest_framework.exceptions import ValidationError
from rest_framework.views import APIView
from cart.models import CartItem
from .models import Order, OrderItem
from .serializers import OrderSerializer



class OrderListView(generics.ListAPIView):
    """
    API para listar los pedidos del usuario actual.
    """
    serializer_class = OrderSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        user = self.request.user
        if user.is_staff:
            return Order.objects.all()  # üî• Admin puede ver todos los pedidos
        return Order.objects.filter(user=user)  # üî• Usuario solo ve sus pedidos


class OrderDetailView(generics.RetrieveUpdateAPIView):
    """
    API for viewing an order and updating its status (only for admin).
    """
    serializer_class = OrderSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        user = self.request.user
        if user.is_staff:
            return Order.objects.all()  # üî• Admin can view and update any order
        return Order.objects.filter(user=user)  # üî• Users can only see their own orders

    def perform_update(self, serializer):
        """
        Allows updating only the order status (only for admin).
        """
        request = self.request
        if "status" in request.data:
            if not request.user.is_staff:
                raise ValidationError({"status": "No tienes permiso para cambiar el estado del pedido."})
            serializer.save(status=request.data["status"])  # üî• –¢–µ–ø–µ—Ä—å —Å—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        else:
            serializer.save()



class OrderCreateView(generics.CreateAPIView):
    """
    API para crear un pedido a partir del carrito.
    """
    serializer_class = OrderSerializer
    permission_classes = [permissions.IsAuthenticated]

    def create(self, request, *args, **kwargs):
        user = request.user
        cart_items = CartItem.objects.filter(user=user)

        if not cart_items.exists():
            return Response({"error": "El carrito est√° vac√≠o."}, status=status.HTTP_400_BAD_REQUEST)

        # üî• –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –ø–æ–¥—Å—á—ë—Ç —Å—É–º–º—ã
        total_price = sum(item.product.price * item.quantity for item in cart_items)

        # üî• –°–æ–∑–¥–∞—ë–º –∑–∞–∫–∞–∑ —Å—Ä–∞–∑—É —Å–æ –≤—Å–µ–º–∏ –ø–æ–∑–∏—Ü–∏—è–º–∏
        order = Order.objects.create(user=user, total_price=total_price, status="pendiente")

        # üî• –ò—Å–ø–æ–ª—å–∑—É–µ–º bulk_create –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        order_items = [OrderItem(order=order, product=item.product, quantity=item.quantity) for item in cart_items]
        OrderItem.objects.bulk_create(order_items)

        cart_items.delete()  # üî• –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞

        return Response(OrderSerializer(order).data, status=status.HTTP_201_CREATED)

class CancelOrderView(APIView):
    """
    API for canceling an order.
    """
    permission_classes = [permissions.IsAuthenticated]

    def post(self, request, pk):
        order = Order.objects.filter(pk=pk).first()  # üî• –ò—Å–ø–æ–ª—å–∑—É–µ–º `.filter().first()`, —á—Ç–æ–±—ã –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å `DoesNotExist`
        if not order:
            return Response({"error": "El pedido no existe."}, status=status.HTTP_404_NOT_FOUND)

        if order.status == "enviado":
            return Response({"error": "No se puede cancelar un pedido enviado."}, status=status.HTTP_400_BAD_REQUEST)

        if not request.user.is_staff and order.user != request.user:
            return Response({"error": "No tienes permiso para cancelar este pedido."}, status=status.HTTP_403_FORBIDDEN)

        order.status = "cancelado"
        order.save(update_fields=["status"])  # üî• –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –ø–æ–ª–µ, –∞ –Ω–µ –≤–µ—Å—å –æ–±—ä–µ–∫—Ç

        return Response({"message": "Pedido cancelado con √©xito."}, status=status.HTTP_200_OK)
