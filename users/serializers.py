from rest_framework import serializers
from django.contrib.auth.hashers import make_password
from .models import CustomUser

class UserSerializer(serializers.ModelSerializer):
    is_admin = serializers.SerializerMethodField()
    is_store_admin = serializers.SerializerMethodField()
    is_seller = serializers.SerializerMethodField()
    is_customer = serializers.SerializerMethodField()

    class Meta:
        model = CustomUser
        fields = [
            'id', 'username', 'email', 'role', 'password',
            'is_admin', 'is_store_admin', 'is_seller', 'is_customer'
        ]
        extra_kwargs = {'password': {'write_only': True}}

    def get_is_admin(self, obj):
        return obj.is_admin

    def get_is_store_admin(self, obj):
        return obj.is_store_admin

    def get_is_seller(self, obj):
        return obj.is_seller

    def get_is_customer(self, obj):
        return obj.is_customer

    def create(self, validated_data):
        """
        ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–∑–Ω–∞—á–∞–µ—Ç `customer` –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
        ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å `store_admin` –∏–ª–∏ `seller`.
        ‚úÖ –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –º–æ–≥—É—Ç –≤—ã–±–∏—Ä–∞—Ç—å —Ä–æ–ª—å.
        """
        request = self.context.get('request')
        if not request or not request.user.is_authenticated or not request.user.is_admin:
            validated_data['role'] = 'customer'  # üî• –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –∑–∞–¥–∞—Ç—å –¥—Ä—É–≥—É—é —Ä–æ–ª—å

        validated_data['password'] = make_password(validated_data['password'])  # ‚úÖ –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
        return super().create(validated_data)

    def update(self, instance, validated_data):
        """
        ‚úÖ –ë–ª–æ–∫–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è.
        ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–æ–ª—è.
        """
        validated_data.pop('role', None)  # üî• –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å
        return super().update(instance, validated_data)
